version: '3'

services:
  web:
    build: .
    command: gunicorn OFX_API.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/ofx_api
      - ./static:/static  # Mount static folder to share with Nginx
      - ./media:/media  # Persist media files
      - ./OFX_API/migrations:/ofx_api/OFX_API/migrations  # Persist migrations
    ports:
      - "8000:8000"
    depends_on:
      - memcached
      - redis
      - celery
    env_file:
      - OFX_API/.env
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static
      - ./media:/media  # Persist media files
    depends_on:
      - web
    networks:
      - mynetwork

  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    networks:
      - mynetwork

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mynetwork

#  celery:
#    build: .
#    command: celery -A OFX_API worker --loglevel=info -E
#    depends_on:
#      - redis
#    env_file:
#      - OFX_API/.env
#    networks:
#      - mynetwork
        
  celery:
    build: .
    container_name: my-celery-container
    command: celery -A OFX_API worker -E -l info
    volumes:
      - .:/ofx_api
    env_file:
      - OFX_API/.env
    depends_on:
      - redis
    networks:
      - mynetwork

  flower:
    build: .
    container_name: my-flower-container
    command: celery -A OFX_API flower
    ports:
      - "5555:5555"
    env_file:
      - ./OFX_API/.env
    depends_on:
      - redis
    networks:
      - mynetwork


networks:
  mynetwork:
    driver: bridge

volumes:
  redis_data: